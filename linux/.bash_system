# System information, networking, and disk usage functions/aliases for bash


# Disk usage shortcuts
alias du='du -h --max-depth=1'  # Show disk usage in human-readable format
alias df='df -h'                # Show free disk space in human-readable format

# Safe aliases to prevent accidental file overwrites or deletions
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
# --- END: migrated from .bash_aliases ---

# Git shortcuts
alias gits='git status'
alias gita='git add .'
alias gitc='git commit -m'
alias gitp='git push'
alias gitpl='git pull'
alias gitl='git log --oneline --graph --decorate'

# Logs
alias logs='tail -f /var/log/syslog'

# Display a concise welcome message with essential server information
display_system_info() {
    local_ip=$(hostname -I | awk '{print $1}')
    echo -e "\n================= Server Status for $(hostname) ($local_ip) =================\n"
    echo "Welcome, $USER! You are logged into server '$(hostname)' (Local IP: $local_ip) at $(date)."
    echo "-------------------------------------------------------------"
    echo -e "\nNon-system Users:"
    awk -F: '$3 >= 1000 && $3 < 65534 {print $1}' /etc/passwd | column
    echo -e "\nCrashed or Stalled Services:"
    systemctl --failed --no-legend | awk '{print "Service:", $1, "- Status:", $3}' || echo "No crashed or stalled services detected."
    echo -e "\nLast 3 Successful Logins:"
    last -a | head -n 3 | awk '{print "User:", $1, "- IP:", $(NF), "- Date:", $4, $5, $6, $7}'
    echo -e "\nLast 10 Failed Login Attempts:"
    sudo grep "Failed password" /var/log/auth.log | tail -n 10 | awk '{print "Date:", $1, $2, "- Time:", $3, "- IP:", $(NF-3)}'
    echo -e "\n=============================================================\n"
}

# System update function for Linux
update_all(){
    echo "Starting system update..."
    
    # Detect package manager and update accordingly
    if command -v apt &> /dev/null; then
        # Debian/Ubuntu
        echo "Updating apt packages..."
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && sudo apt autoclean
    elif command -v yum &> /dev/null; then
        # RHEL/CentOS (older)
        echo "Updating yum packages..."
        sudo yum update -y && sudo yum autoremove -y && sudo yum clean all
    elif command -v dnf &> /dev/null; then
        # Fedora/RHEL/CentOS (newer)
        echo "Updating dnf packages..."
        sudo dnf update -y && sudo dnf autoremove -y && sudo dnf clean all
    elif command -v pacman &> /dev/null; then
        # Arch Linux
        echo "Updating pacman packages..."
        sudo pacman -Syu --noconfirm && sudo pacman -Rns $(pacman -Qtdq) --noconfirm 2>/dev/null || true
    elif command -v zypper &> /dev/null; then
        # openSUSE
        echo "Updating zypper packages..."
        sudo zypper refresh && sudo zypper update -y && sudo zypper clean
    elif command -v apk &> /dev/null; then
        # Alpine Linux
        echo "Updating apk packages..."
        sudo apk update && sudo apk upgrade
    else
        echo "No supported package manager found (apt, yum, dnf, pacman, zypper, apk)"
    fi
    
    # Update snap packages if available
    if command -v snap &> /dev/null; then
        echo "Updating snap packages..."
        sudo snap refresh
    fi
    
    # Update flatpak packages if available
    if command -v flatpak &> /dev/null; then
        echo "Updating flatpak packages..."
        flatpak update -y
    fi
    
    # Update git repositories
    echo "Updating git repositories..."
    if declare -f update_git_repos > /dev/null; then
        update_git_repos
    else
        echo "update_git_repos function not found, skipping git updates"
    fi
    
    # Clean up and show completion
    echo "Clearing terminal..."
    sleep 2
    clear
    echo "âœ… System update completed!"
    
    # Show system info
    if declare -f display_system_info > /dev/null; then
        display_system_info
    fi
}

display_system_info
